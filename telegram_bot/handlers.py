import shutil
from asyncio import sleep

from aiogram import Bot, Router
from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Filter
from requests_api import get_output, get_list_actual_files, add_files, delete_files, clear_dialog
from consts import ADMIN_ID
from telegram_bot.keyboards import admin_panel, complete_panel
from aiogram.fsm.context import FSMContext
from telegram_bot.state import AllStates
import os

router = Router()


@router.message(F.text == "/start")
async def start(message: Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —è HR-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Smart Consulting. –¢—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å HR!\n\n<i>–í —Ü–µ–ª—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ /admin </i>", parse_mode="HTML")


@router.message(F.text == "/help")
async def cmd_help(message: Message):
    await message.answer("–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–∏ Smart Consulting.\n<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ –∏—Å—Ö–æ–¥—è –∏–∑ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏.\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ–π /clear.\n–°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –∏ –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ~ 30 —Å–µ–∫—É–Ω–¥.", parse_mode="HTML")


@router.message(F.text == "/clear")
async def cmd_help(message: Message):
    await clear_dialog()
    await message.answer("–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!üí¨")


class Admin(Filter):
    async def __call__(self, message: Message) -> bool:
        return message.from_user.id in [ADMIN_ID]


@router.message(Admin(), F.text == "/admin")
async def admin(message: Message, bot: Bot):
    await message.answer("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=admin_panel)


@router.callback_query(Admin(), F.data == "list_files")
async def get_list_files(call: CallbackQuery):
    file_names = await get_list_actual_files()
    await call.message.answer('–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤:\n' + '\n'.join(file_names))


@router.callback_query(Admin(), F.data == "add_file")
async def add_file(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–ü–æ–¥–≥—Ä—É–∑–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã, –∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤–æ:",
                              reply_markup=complete_panel)
    await state.set_state(AllStates.GET_FILES)


@router.message(Admin(), F.document, AllStates.GET_FILES)
async def cmd_document_admin(message: Message, bot: Bot):
    doc = message.document
    file = await bot.get_file(doc.file_id)
    file_path = file.file_path
    await bot.download_file(file_path, "../company_data/" + doc.file_name)
    await message.reply("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω‚úÖ")


@router.callback_query(Admin(), F.data == "delete_file")
async def add_file(call: CallbackQuery, state: FSMContext):
    file_names = await get_list_actual_files()
    await call.message.answer(
        "–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤:\n" + '\n'.join(file_names) + "\n–ù–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:")
    await state.set_state(AllStates.DELETE_FILES)


@router.message(Admin(), F.text, AllStates.DELETE_FILES)
async def cmd_document_admin(message: Message, bot: Bot):
    file_names = message.text.split()
    await delete_files(file_names)
    await message.reply("–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ãüóë")


@router.callback_query(Admin(), F.data == "complete", AllStates.GET_FILES)
async def add_file(call: CallbackQuery, state: FSMContext):
    files = []
    path = '../company_data'
    dirs = os.listdir(path)
    if dirs:
        for direct in dirs:
            files.append(('files', (direct, open(f'{path}/{direct}', 'rb'))))
            os.remove(os.path.join(path, direct))
        print(files)
        await add_files(files)

        await call.message.answer("–í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        await state.clear()
    else:
        await call.message.answer("–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã –∏ –Ω–∞–∂–º–∏—Ç–µ –≥–æ—Ç–æ–≤–æ.")


@router.callback_query(Admin(), F.data == "add_file")
async def add_file(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–ü–æ–¥–≥—Ä—É–∑–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã, –∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤–æ:")
    await state.set_state(AllStates.GET_FILES)


@router.message(F.photo)
async def cmd_photo(message: Message):
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–º!")


@router.message(F.sticker or F.emoji)
async def cmd_sticker(message: Message):
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–º!")


@router.message(F.video)
async def cmd_video(message: Message):
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–º!")


@router.message(F.voice)
async def cmd_voice(message: Message):
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–º!")


@router.message(F.document)
async def cmd_document(message: Message):
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–º!")


@router.message(F.text)
async def text(message: Message, state: FSMContext):
    path = '../company_data'
    dirs = os.listdir(path)
    if dirs:
        await message.answer("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–æ!")
        for direct in dirs:
            os.remove(os.path.join(path, direct))
        await state.clear()

    a = await message.answer("–í–∞—à –≤–æ–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É‚ôª")

    input_text = message.text
    await a.edit_text(await(get_output(input_text)))
